import logging
import telebot
from telebot import types
import edge_tts
import asyncio
import settings as set
import markups

logging.basicConfig(level=logging.INFO)
token = '8049026907:AAEblYRbs9V3paCRxlSRp40Z6TiQ6R-neC0'
bot = telebot.TeleBot(token)

# ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã –∏ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
HELP = """/help - –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –æ–∑–≤—É—á–∏—Ç—å
/start - –ù–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞
/voice - –í—ã–±–æ—Ä —Ç–∏–ø–∞ –≥–æ–ª–æ—Å–∞ (–º—É–∂—Å–∫–æ–π –∏–ª–∏ –∂–µ–Ω—Å–∫–∏–π)
/reset - –°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫
/support - –ü–æ–¥–¥–µ—Ä–∂–∫–∞"""

start_text = '''–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äì VoiceGen, –≤–∞—à –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –ø—Ä–µ–≤—Ä–∞—â–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–∞ –≤ –≥–æ–ª–æ—Å. –í–æ—Ç —á—Ç–æ —è –º–æ–≥—É –¥–ª—è –≤–∞—Å —Å–¥–µ–ª–∞—Ç—å:

1. –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ –≥–æ–ª–æ—Å ‚Äì –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç, –∏ —è –æ–∑–≤—É—á—É –µ–≥–æ.

2. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–æ–ª–æ—Å–∞ ‚Äì –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ —Å–∫–æ—Ä–æ—Å—Ç—å, —Ç–µ–º–±—Ä –∏ –¥–∞–∂–µ —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –≥–æ–ª–æ—Å–∞ –ø–æ–¥ –≤–∞—à–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è.

3. –í—ã–±–æ—Ä —è–∑—ã–∫–∞ ‚Äì —è –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é –Ω–µ—Å–∫–æ–ª—å–∫–æ —è–∑—ã–∫–æ–≤, —á—Ç–æ–±—ã –æ–∑–≤—É—á–∫–∞ –±—ã–ª–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–Ω—è—Ç–Ω–æ–π –∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–π.

–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å, –Ω–∞–∂–º–∏—Ç–µ "–ü–æ–º–æ—â—å", –∏ —è –ø–æ–¥—Å–∫–∞–∂—É, –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–æ–∏–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏. –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ VoiceGen!'''

settings = set.Settings()


@bot.message_handler(commands=['support'])
def support_command(message):
    urlkb = types.InlineKeyboardMarkup()
    urlButton2 = types.InlineKeyboardButton(text='–ü–æ–¥–¥–µ—Ä–∂–∫–∞', url='https://t.me/ilkft')
    urlkb.add(urlButton2)
    bot.send_message(message.chat.id, "–ü–æ–¥–¥–µ—Ä–∂–∫–∞", reply_markup=urlkb)


@bot.message_handler(commands=['help'])
def help_command(message):
    bot.send_message(message.chat.id, HELP)

@bot.message_handler(commands=['voice'])
def show_settings(message):
    chat_id = message.chat.id
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_settings = settings.get_user(chat_id)
    
    lang = user_settings.get("lang", "No language selected")
    gender = user_settings.get("gender", "No gender selected")
    volume = user_settings.get("volume", "No volume selected")
    pitch = user_settings.get("pitch", "No pitch selected")
    rate = user_settings.get("rate", "No rate selected")
    settings_text = f"""
Current Settings for Chat ID {chat_id}:

–Ø–∑—ã–∫: {lang}
–ü–æ–ª: {gender}
–ì—Ä–æ–º–∫–æ—Å—Ç—å: {volume}
–¢–æ–Ω: {pitch}
–°–∫–æ—Ä–æ—Å—Ç—å: {rate}
"""
    
    bot.send_message(chat_id, settings_text)

@bot.message_handler(commands=['start'])
def start(message):
    chat_id = message.chat.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if settings.get_user(chat_id) == {}:
        settings.reset_settings(chat_id)
        
    bot.send_message(message.chat.id, start_text)
    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:", reply_markup=markups.lang_murkup())


@bot.message_handler(commands='reset')
def reset_settings_command(message):
    chat_id = message.chat.id
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    settings.reset_settings(chat_id)
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ —Å–±—Ä–æ—Å–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    bot.send_message(chat_id, "–í–∞—à–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±—ã–ª–∏ —Å–±—Ä–æ—à–µ–Ω—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫, –ø–æ–ª –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Ç–æ–Ω–∞ –∑–∞–Ω–æ–≤–æ.")
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≤—ã–±–æ—Ä–∞ —è–∑—ã–∫–∞
    bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:", reply_markup=markups.lang_murkup())
    

@bot.callback_query_handler(func=lambda call: True)
def handle_callback(call):
    chat_id = call.message.chat.id
    user_settings = settings.get_user(chat_id)
    if not user_settings:
        settings.reset_settings(chat_id)
    
    if call.data == "reset":
        settings.reset_settings(chat_id)
        bot.answer_callback_query(callback_query_id=call.id, text="–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–±—Ä–æ—à–µ–Ω—ã.")
    
    elif call.data in ["ru", "en"]:
        settings.set_language(chat_id, call.data)
        bot.answer_callback_query(callback_query_id=call.id, text=f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {call.data} —è–∑—ã–∫.")
        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ–ª–æ—Å:", reply_markup=markups.gender_markup())
    
    elif call.data in ["male", "female"]:
        settings.set_gender(chat_id, call.data)
        bot.answer_callback_query(callback_query_id=call.id, text=f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {call.data} –≥–æ–ª–æ—Å.")
        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Å–∫–æ—Ä–æ—Å—Ç–∏:", reply_markup=markups.rate_markup())
    
    elif call.data in ["fast", "normal", "slow"]:
        settings.set_rate(chat_id, call.data)
        bot.answer_callback_query(callback_query_id=call.id, text=f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {call.data} —Å–∫–æ—Ä–æ—Å—Ç—å.")
        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –≥—Ä–æ–º–∫–æ—Å—Ç–∏:", reply_markup=markups.volume_markup())
    
    elif call.data in ["loud", "default", "quiet"]:
        settings.set_volume(chat_id, call.data)
        bot.answer_callback_query(callback_query_id=call.id, text=f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {call.data} –≥—Ä–æ–º–∫–æ—Å—Ç—å.")
        bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Ç–æ–Ω–∞:", reply_markup=markups.pitch_markup())
    
    elif call.data in ["high", "okay", "low"]:
        settings.set_pitch(chat_id, call.data)
        bot.answer_callback_query(callback_query_id=call.id, text=f"–í—ã –≤—ã–±—Ä–∞–ª–∏ {call.data} —Ç–æ–Ω.")
        bot.send_message(chat_id, "–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –æ–∑–≤—É—á–∫–∏.")


rate_ttn = {"fast" : "+50%", #ttn - text to number
            "normal": "+0%",
            "slow" : "-50%"}

volume_ttn = {"loud" : "+50%",
            "default": "+0%",
            "quiet" : "-50%"}

pitch_ttn = {"high" : "+50Hz",
            "okay": "+0Hz",
            "low" : "-50Hz"}

async def make_sound(chat_id, text, voice_name, rate, volume, pitch):
    tts = edge_tts.Communicate(
        text=text,
        voice=voice_name,
        rate=rate_ttn[rate],
        volume=volume_ttn[volume],
        pitch=pitch_ttn[pitch]
    )
    await tts.save(f"cache/audio{chat_id}.mp3")

def voice_name_selection(lang, gender):
    if lang == "ru":
        if gender == "male":
            return "ru-RU-DmitryNeural"
        elif gender == "female":
            return "ru-RU-SvetlanaNeural"
    else:
        if gender == "male":
            return "en-US-AndrewNeural"
        elif gender == "female":
            return "en-US-AvaNeural"

@bot.message_handler(content_types=['text'])
def handle_text(message):
    chat_id = message.chat.id

    user_settings = settings.get_user(chat_id)
    
    if user_settings:
        try:

            lang = user_settings["lang"]
            gender = user_settings["gender"]
            rate = user_settings["rate"]
            volume = user_settings["volume"]
            pitch = user_settings["pitch"]

            if lang and gender and rate and volume and pitch:
                generating_message_id = bot.send_message(message.chat.id, "‚è≥ –ó–∞–ø—Ä–æ—Å –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è: –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥, –ø–æ–∫–∞ —è —Å–æ–∑–¥–∞—é –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.").message_id
                
                print(f"Chat ID: {chat_id}, Lang: {lang}, Gender: {gender}, Volume: {volume}, Rate: {rate}, Pitch: {pitch}")
                voice_name = voice_name_selection(lang, gender)
                
                asyncio.run(make_sound(chat_id, message.text, voice_name, rate, volume, pitch))

                bot.send_voice(chat_id, open(f"cache/audio{chat_id}.mp3", 'rb'))

                bot.delete_message(chat_id=message.chat.id, message_id=generating_message_id)
                logging.info(f"Sent audio file for chat ID: {chat_id}")
            else:
                bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫, –ø–æ–ª –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Ç–æ–Ω–∞.(–ö–æ–º–∞–Ω–¥–∞ /start)")

        except Exception as e:
            logging.error(f"Error generating audio: {str(e)}")
            bot.send_message(chat_id, f"üö´ –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: –í–æ–∑–Ω–∏–∫–ª–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–µ–ø–æ–ª–∞–¥–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑ –ø–æ–∑–∂–µ. –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —Ä–µ—à–µ–Ω–∏–µ–º –ø—Ä–æ–±–ª–µ–º—ã: {str(e)}")
    else:
        bot.send_message(chat_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫, –ø–æ–ª –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫—É —Ç–æ–Ω–∞.(–ö–æ–º–∞–Ω–¥–∞ /start)")



bot.polling(non_stop=True)
